import styles from "./home.module.css";
import { useState } from "react";

export default function Home() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isChatbotOpen, setIsChatbotOpen] = useState(false);  // Estado para controlar o modal do chatbot
  const [modalContent, setModalContent] = useState("");
  const [messages, setMessages] = useState([{ text: "Ol√°, como posso ajudar voc√™?", sender: "bot" }]);
  const [userMessage, setUserMessage] = useState("");

  // Fun√ß√£o para abrir o modal de informa√ß√µes
  const handleShow = (content) => {
    const formattedContent = content.replace(/\n/g, "<br />"); // Substitui \n por <br />
    setModalContent(formattedContent);
    setIsModalOpen(true);
  };
  
  

  // Fun√ß√£o para fechar o modal de informa√ß√µes
  const closeModal = () => {
    setIsModalOpen(false);
  };

  // Fun√ß√£o para enviar a mensagem no chatbot
  const handleSendMessage = () => {
    if (userMessage.trim()) {
      setMessages([...messages, { text: userMessage, sender: "user" }]);
      setUserMessage(""); // Limpa o campo de entrada
      // Simula√ß√£o de resposta do bot
      setTimeout(() => {
        setMessages((prevMessages) => [
          ...prevMessages,
          { text: "Estou aqui para ajudar!", sender: "bot" }
        ]);
      }, 1000);
    }
  };

  // Fun√ß√£o para abrir o chatbot
  const openChatbot = () => {
    setIsChatbotOpen(true);
  };

  // Fun√ß√£o para fechar o chatbot
  const closeChatbot = () => {
    setIsChatbotOpen(false);
  };

  return (
    <div>
      {/* Hero Section */}
      <section className={styles.hero}>
        <div className={styles.content}>
          <h1>Caminhos para um Futuro Mais Verde</h1>
          <p>
            Descubra pr√°ticas sustent√°veis, tecnologias verdes e metas de emiss√µes de carbono zero. Junte-se a n√≥s para construir um futuro mais saud√°vel.
          </p>
          <button className={styles.cta}>Saiba Mais</button>
        </div>
        <img src="/images/banner.webp" alt="Futuro Verde" />
      </section>

      {/* Pr√°ticas Sustent√°veis */}
      <section className={styles.section}>
        <h2>Pr√°ticas Sustent√°veis</h2>
        <p>Explore formas de reduzir res√≠duos e adotar efici√™ncia energ√©tica.</p>
        <div className={styles.cards}>
          <div className={styles.card}>
            <img src="/images/reducao-residuos.webp" alt="Reciclagem" />
            <h3>Redu√ß√£o de Res√≠duos</h3>
          </div>
          <div className={styles.card}>
            <img src="/images/eficiencia-energetica.webp" alt="LED" />
            <h3>Efici√™ncia Energ√©tica</h3>
          </div>
          <div className={styles.card}>
            <img src="/images/recursos-renovaveis.webp" alt="Solar" />
            <h3>Uso de Recursos Renov√°veis</h3>
          </div>
        </div>
      </section>

      {/* Tecnologias Verdes */}
      <section className={styles.section}>
        <h2>Tecnologias Verdes</h2>
        <p>Saiba mais sobre solu√ß√µes tecnol√≥gicas sustent√°veis.</p>
        <div className={styles.cards}>
          <div className={styles.card}>
            <img src="/images/paineis-solares.webp" alt="Pain√©is Solares" />
            <h3>Pain√©is Solares</h3>
          </div>
          <div className={styles.card}>
            <img src="/images/turbinas-eolicas.webp" alt="Turbinas E√≥licas" />
            <h3>Turbinas E√≥licas</h3>
          </div>
          <div className={styles.card}>
            <img src="/images/carros-eletricos.webp" alt="Ve√≠culos El√©tricos" />
            <h3>Ve√≠culos El√©tricos</h3>
          </div>
        </div>
      </section>

      {/* Metas de Emiss√µes */}
      <section className={styles.section}>
        <h2>Metas de Emiss√µes de Carbono Zero</h2>
        <div className={styles.timeline}>
          {/* 2015 - Acordo de Paris */}
          <div className={styles.timelineItem}>
            <h3>2015 - Acordo de Paris</h3>
            <button
              className={styles.moreInfoButton}
              onClick={() =>
                handleShow(
                  "Mais informa√ß√µes sobre o Acordo de Paris:\n\n" +
                  "1. Limitar o aumento da temperatura global a menos de 2¬∞C, com esfor√ßos para 1,5¬∞C.\n\n" +
                  "2. Estabelecer Contribui√ß√µes Nacionalmente Determinadas (NDCs) para redu√ß√£o de emiss√µes.\n\n" +
                  "3. Financiamento de US$ 100 bilh√µes anuais at√© 2020 para apoiar pa√≠ses em desenvolvimento.\n\n" +
                  "4. Revis√£o regular das metas a cada 5 anos para aumento da ambi√ß√£o.\n\n" +
                  "5. Primeiro acordo clim√°tico universal, com participa√ß√£o de 196 pa√≠ses."
                )
              }
            >
              Saiba Mais
            </button>
          </div>

          {/* 2030 - Neutralidade Parcial */}
          <div className={styles.timelineItem}>
            <h3>2030 - Neutralidade Parcial</h3>
            <button
              className={styles.moreInfoButton}
              onClick={() =>
                handleShow(
                  "Metas intermedi√°rias para 2030:\n\n" +
                  "1. Reduzir emiss√µes de gases de efeito estufa em 55% em rela√ß√£o aos n√≠veis de 1990 (Uni√£o Europeia).\n\n" +
                  "2. Aumentar a participa√ß√£o das energias renov√°veis para pelo menos 32%.\n\n" +
                  "3. Melhorar a efici√™ncia energ√©tica em pelo menos 32,5%.\n\n" +
                  "4. Implementar estrat√©gias de economia circular e transporte sustent√°vel.\n\n" +
                  "5. Apoiar pa√≠ses em desenvolvimento com recursos t√©cnicos e financeiros."
                )
              }
            >
              Saiba Mais
            </button>
          </div>

          {/* 2050 - Neutralidade Total */}
          <div className={styles.timelineItem}>
            <h3>2050 - Neutralidade Total</h3>
            <button
              className={styles.moreInfoButton}
              onClick={() =>
                handleShow(
                  "Meta de Neutralidade Total em 2050:\n\n" +
                  "1. Alcan√ßar emiss√µes l√≠quidas zero globalmente, compensando emiss√µes com remo√ß√£o de carbono.\n\n" +
                  "2. Descarboniza√ß√£o completa de setores como energia, transporte e agricultura.\n\n" +
                  "3. Uso de tecnologias de captura e armazenamento de carbono (CCS).\n\n" +
                  "4. Reflorestamento em larga escala para captura de carbono natural.\n\n" +
                  "5. Preservar e restaurar ecossistemas para manter a biodiversidade e o equil√≠brio ambiental."
                )
              }
            >
              Saiba Mais
            </button>
          </div>
        </div>
      </section>

      {/* Modal - Conte√∫do (informa√ß√µes) */}
      {isModalOpen && (
        <div className={styles.modalOverlay} onClick={closeModal}>
          <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
            <button className={styles.closeButton} onClick={closeModal}>
              &times;
            </button>
            <div className={styles.modalContent}>
              <h2>Informa√ß√µes</h2>
              <p dangerouslySetInnerHTML={{ __html: modalContent }} />
            </div>
          </div>
        </div>
      )}

      {/* Modal - Chatbot */}
      {isChatbotOpen && (
        <div className={styles.chatbotModalOverlay} onClick={closeChatbot}>
          <div className={styles.chatbotModal} onClick={(e) => e.stopPropagation()}>
            <button className={styles.closeButton} onClick={closeChatbot}>
              &times;
            </button>
            <div className={styles.chatbotContent}>
              <h2>Chat com o Assistente</h2>
              <div className={styles.chatbotMessages}>
                {messages.map((msg, index) => (
                  <div
                    key={index}
                    className={msg.sender === "bot" ? styles.chatbotMessageBot : styles.chatbotMessageUser}
                  >
                    {msg.text}
                  </div>
                ))}
              </div>
              <input 
                type="text" 
                placeholder="Digite sua mensagem..." 
                className={styles.chatbotInput} 
                value={userMessage}
                onChange={(e) => setUserMessage(e.target.value)} 
              />
              <button className={styles.chatbotSendMessage} onClick={handleSendMessage}>Enviar</button>
            </div>
          </div>
        </div>
      )}

      {/* Bot√£o Flutuante */}
      <button 
        className={styles.floatingButton} 
        onClick={openChatbot}
      >
        üí¨
      </button>

      {/* Footer */}
      <footer className={styles.footer}>
        <p>¬© 2024 GreenFuture - Todos os direitos reservados.</p>
      </footer>
    </div>
  );
}
